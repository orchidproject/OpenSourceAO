<html>
<head>
	<title>Atomic Orchid Map Editor</title>
	<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" />
	<link rel="stylesheet" href="/mapeditor/style.css" />

	<script type="text/javascript" src="http://maps.google.com/maps/api/js?libraries=geometry,visualization&sensor=false"></script>
	<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
	<script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
	<script type="text/javascript" src="/js-model/models.js"></script>
	<script type="text/javascript" src="/game-common.js"></script> 
	<script type="text/javascript" src="/mapeditor/interface.js"></script>
	
<script type="text/javascript">

var map;
var pointEditorInfoWindow;
var pellets = {};
var activePoint;


var chosen_task_type = 0;

function addTask(value) {
	
	chosen_task_type = value;
	
	
}

//this fuction currently does nothing
//bounding box is obsolate
function addBoundingBox(){
    setGameArea();
    $(boundingBoxes).each(
        function(i,box){
    
            $.post("/admin/games/"+layerId+"/addBoundingBox", {
                swLatitude: box.getSouthWest().lat(),
                swLongitude: box.getSouthWest().lng(),
                neLatitude: box.getNorthEast().lat(),
                neLongitude: box.getNorthEast().lng()
            }, function(data){
                if(data.status != "ok") {
                    alert("Something went wrong! :(");
                    window.location = window.location;
                }
                else{
                     window.location = window.location;
                }
            }, "json");
    });
}

function setGameArea(){
	$.post("/admin/games/"+layerId+"/setGameArea", {
                latitude: $("#top_left_lat").val(),
                longitude: $("#top_left_lng").val()
            }, function(data){
                if(data.status != "ok") {
                    alert("Something went wrong! :(");
                    window.location = window.location;
                }
                else{
                     window.location = window.location;
                }
            }, "json");
}


//this function has been changed to adapt task objects
function addRadiationBits(){
    var count=0;
    $(radiationBits).each(
        function(i,bit){
    
            $.post("/admin/games/"+layerId+"/addTask", {
                latitude: bit[0].lat(),
                longitude: bit[0].lng(),
                task_type: bit[1]
            }, function(data){
                if(data.status != "ok") {
                    alert("Something went wrong! :(");
                    window.location = window.location;
                }
                else{
			count++
			if (count==radiationBits.length){
                     		window.location = window.location;
			}
                }
            }, "json");
    });
}

function addDropOffPoints(){
    
    $(dropoffpoints).each(
        function(i,bit){
    
            $.post("/admin/games/"+layerId+"/addDropOffPoint", {
                latitude: bit[0].lat(),
                longitude: bit[0].lng(),
                radius: bit[1]
            }, function(data){
                if(data.status != "ok") {
                    alert("Something went wrong! :(");
                    window.location = window.location;
                }
                else{
                     window.location = window.location;
                }
            }, "json");
    });
}




function clearBoundingBox(){
    $.get("/admin/games/"+layerId+"/clearBoundingBox",
        function(data){
	    if(data.status != "ok") {
				alert("Something went wrong! :(");
				window.location = window.location;
	    }
            else{
                window.location.reload();
            }
	}, "json");
}

function clearRadiationBits(){
    $.get("/admin/games/"+layerId+"/clearRadiationBit",
        function(data){
			if(data.status != "ok") {
				alert("Something went wrong! :(");
				window.location = window.location;
			}
            else{
                window.location.reload();
            }
		}, "json");
}

function saveSetting(){
	var name=prompt("please enter a name for this template");
	if(name==null){return;}
	
	$.get("/admin/games/"+layerId+"/saveSetting?name="+name,function(data){
	    if(data.status != "ok") {
			alert("Something went wrong! :(");
			window.location = window.location;
	    }
            else{
		alert("template created");
                window.location.reload();
            }	
	

	},"json");
}

function receiveRadiationBit(bit){

		chosen_task_type = bit.type;

		var taskIcon= getTaskIcon(chosen_task_type);
		point = new google.maps.LatLng(bit.latitude,bit.longitude);
                
    	var marker = new google.maps.Marker({
                	position: point,
                	map: map,
                	icon: taskIcon
        });

}

function receiveDropoffpoints(bit){

		point = new google.maps.LatLng(bit.latitude,bit.longitude);
                	
        var circle = new google.maps.Circle({
                center:point,
  				map: map,
  				radius: bit.radius,    
  				fillColor: '#0000FF',
  				strokeColor: '#0000FF'
		});

}


var layerId = "<%= @game.layer_id %>";
var radiationBits = [];
var dropoffpoints = [];




//set up map and load data
$(function(){
	
	var mapOptions = {
		zoom: 15,
		center: new google.maps.LatLng(<%= @game.latitude %>, <%= @game.longitude %>),
		mapTypeId: google.maps.MapTypeId.HYBRID, //jef
 		mapTypeControl: true,
		disableDoubleClickZoom: true
	};
	
	// Create the main map
	map = new google.maps.Map(document.getElementById("map"), mapOptions);

	
	$.getJSON("/admin/games/"+layerId+"/setup.json", {
	}, function(data){
	
		/*$(data.radiationBits).each(function(i, bit){
			receiveRadiationBit(bit);
		});*/
        
        
        //
        $(data.tasks).each(function(i, bit){
			receiveRadiationBit(bit);
		});
		
		$(data.dropoffpoints).each(function(i, bit){
			receiveDropoffpoints(bit);
		});
		
		
	});
	
	GameMap.fitToRadius(<%= @game.radius %>);

	function resizeMap() {
		$("#map").css({height: $(window).height()});
	}
	resizeMap();
	$(window).resize(resizeMap);

});


</script>
<link rel="stylesheet" href="/bootstrap.css">
</head>

<body>

	<div id="editor-tabs">
		<ul>
		    <li><a href="#editor-tabs-1">Targets</a></li>
		    <li><a href="#editor-tabs-2">Drop off zone</a></li>
		    <li><a href="#editor-tabs-3">Game area</a></li>
		    <li><a href="#editor-tabs-4">Terrain</a></li>
		    <li><a href="#editor-tabs-5">Cloud</a></li>


		</ul>	
		<div id="editor-tabs-1" >
			<div style="padding: 3px;">
					  <p><h5>Deploy target types</h5> To place target type on map click button once and then click on<br> location on map.</p>
			</div>
			<ol class="targets-selectable">
					<li class="state-default" actionId=1 >Resource</li>
					<li class="state-default" actionId=2 >Fuel</li>
					<li class="state-default" actionId=3 >Person</li>
					<li class="state-default" actionId=4 >Animal</li>
					<li class="state-delete"  actionId=5 >Remove</li>
	
			</ol>
		</div>	
		<div id="editor-tabs-2" >
				  <div style="padding: 3px;">
					  <p><h5>Deploy drop-off points</h5></p>
				  </div>
				  <ol class="targets-selectable">
					<li class="state-default" actionId=6 >dropZone</li>  
					<li class="state-delete"  actionId=7 >Remove</li> 
				  </ol>
				  <br>
					  radius:
				  <input  id="radius" type="text" value=10 id="drop-off-radius" />
	
		</div>
		<div id="editor-tabs-3" >
				  <div style="padding: 3px;">
					  <p><h5>Top left corner of game area</h5></p>
				  </div>
				  latitude:
				  <input id="sim_lat"  type="text" value="<%= @top_left_latitude %>"  />
				  <br>
				  longitude:
				  <input id="sim_lng"  type="text" value="<%= @top_left_longitude %>" />   
				  <input class="btn" type="button" id="set-location" disabled=true value="set"/>
				  <ol class="targets-selectable">
					<li class="state-default" actionId=8>drop</li>  
				  </ol>
 
				  
	
		</div>
		<div id="editor-tabs-4"> 
				  grid size:
				  <input id="grid-size" type="text" value="3" />
				  <br>
				  time interval
				  <input id="time-interval" type="text" value="0.2" />
				  <br>
				  simulation file:
				  <select id="simulation-select"> 
				  </select>
				  <div id="simulation-size"> </div>
				  <div id="simulation-frame"> </div>
		</div>
		<div id="editor-tabs-5">
			  You can set the simulation file in the tab terrian
			  <div id="sim-loading" > loading simulation file.... </div>
			<br>
			  frame:<input id="display-frame" type=text value="50"/>  
			  <input class="btn" type="button" id="display-heatmap"  value="show heatmap"/>
			 play speed: <input type=text value="0.2"/>
			
		</div>
 
		<br>
		<div style="padding: 3px;">
			  <input class="btn" type="button" id="move-to-location"  value="center"/>
			  <input class="btn" type="button" value="Save" id="save-button" />
			  <input class="btn" type="button" value="Reset" id="reset-button"/>
			  <input class="btn" type="button" value="Close" onclick="window.location = '/admin/games';"/>
			  <input class="btn" type="button" id="saveSetting" value="Save as a template" onclick="saveSetting()";>
		</div>
	
	</div>
	


	<div id="map" ></div>
	
</body>

</html>
